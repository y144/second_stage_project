<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--注册组件扫描器 进行创建对象-->
    <context:component-scan base-package="com.bjpowernode.controller"></context:component-scan>


    <!--注册视图解析器 请求转发或重定向跳转中进行地址的拼接，前缀 后缀-->
    <bean id="internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>


    <!--完成静态资源的分流，就是让tomcat服务器中的default(servlet)去处理
        mapping:是请求的路径,这里的路径就是让tomcat去处理的请求，这个路径是我们发出请求的路径，但实际执行时是通过location中的路径进行执行的
        location:是当前项目中的资源实际的位置
      -->
    <!--这些都是发出请求路径  与实际执行路径-->
    <!--<mvc:resources mapping="/images/**" location="/WEB-INF/images/"></mvc:resources>-->
    <!--<mvc:resources mapping="/css/**" location="/WEB-INF/css/"></mvc:resources>-->
    <!--<mvc:resources mapping="/js/**" location="/WEB-INF/js/"></mvc:resources>-->
    <!--这里的**表示所有的文件-->
    <mvc:resources mapping="/static/**" location="/WEB-INF/static/"></mvc:resources>


    <!--完成动态资源的分流，就是通过springmvc中的DidspatcherServlet去处理动态资源-->
    <mvc:annotation-driven></mvc:annotation-driven>


    <!--进行了资源拦截器的设定后 还必须要在这里进行拦截器的注册，否则拦截器不会生效-->
    <!--在<mvc:interceptors>这里可以进行多个拦截器的设定-->
    <mvc:interceptors>
        <!--
            每一个<mvc:interceptor>就是一个拦截器
            可以在这里进行配置拦截的请求
            配置放行的请求
            配置实现功能的拦截的类
        -->
        <mvc:interceptor>
            <!--/**:表示拦截所有请求-->
            <mvc:mapping path="/**"/>
            <!--表示被放行的请求 进入登录页面的请求被放行-->
            <mvc:exclude-mapping path="/one/showLogin"></mvc:exclude-mapping>
            <!--进行登录处理的请求被放行-->
            <mvc:exclude-mapping path="/one/login"></mvc:exclude-mapping>
            <!--在这里设定是由哪个类来负责拦截器功能的实现 进行其对象的创建-->
            <bean class="com.bjpowernode.interceptor.LoginInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>
</beans>