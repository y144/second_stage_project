<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--配置spring的ioc,把service对象配置进来 他需要增强 需要添加一个日志通知-->
    <bean id="accountService" class="com.bjpowernode.service.impl.AccountServiceImpl"></bean>



    <!--1.日志的通知对象  把通知bean也交给spring来管理-->
    <bean id="logger" class="com.bjpowernode.utils.Logger"></bean>


    <!--2.开始配置aop-->
    <aop:config>
        <!--在此xml文件约束中有要求，此标签必须出现在切面之前-->

        <!--配置切入点表达式，id属性用于指定表达式的唯一标识，expression属性用于指定表达式的内容
                此标签写在aop:aspect标签内部，只能当前切面使用，如果有新的切面必须重新配
                它还可以写在aop:aspect外面 此时就变成了所有切面可用
            -->
        <aop:pointcut id="pt1" expression="execution(* com.bjpowernode.service.impl.*.*(..))"></aop:pointcut>

        <!--配置切面 引用通知-->
        <aop:aspect id="logAdvice" ref="logger">
            <!--配置前置通知  在切入点方法执行之前进行执行-->
            <!--<aop:before method="beforePrintLog" pointcut-ref="pt1" ></aop:before>-->
            <!--配置后置通知  在切入点方法 正常 执行之后执行，他和异常通知永远只能执行一个-->
            <!--<aop:after-returning method="afterReturningPrintLog" pointcut-ref="pt1" ></aop:after-returning>-->

            <!--配置异常通知  在切入点方法执行产生异常之后执行，没有异常则不执行 他和后置通知永远只能执行一个-->
            <!--<aop:after-throwing method="afterThrowingPrintLog" pointcut-ref="pt1" ></aop:after-throwing>-->

            <!--配置最终通知  无论切入点方法是否正常执行，它都会在最后执行-->
            <!--<aop:after method="afterPrintLog" pointcut-ref="pt1" ></aop:after>-->


            <!--配置环绕通知  详细的注释请看logger类中-->
            <aop:around method="aroundPrintLog" pointcut-ref="pt1"></aop:around>
        </aop:aspect>
    </aop:config>
</beans>